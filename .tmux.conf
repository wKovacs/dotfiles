# =======================================================================
# TMUX BASE CONFIGURATION
# =======================================================================
set-option -g status on
set-option -g status-interval 2
set-option -g status-justify "centre"

set -s set-clipboard external

# Mouse Toggle: Ctrl-b m
set -g mouse on
bind-key -T prefix m set -g mouse\; display 'Mouse: #{?mouse,ON,OFF}'

# Reload config: Ctrl-b M-r (Alt-r)
bind-key -T prefix M-r source-file ~/.tmux.conf \; display "Config reloaded!"

# Window titles
set-option -g set-titles on
set-option -g set-titles-string "#S:#P #W"
set-option -g allow-rename on


# =======================================================================
# PLUGINS & INITIALIZATION
# =======================================================================

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'erikw/tmux-powerline'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'


# =======================================================================
# CUSTOM KEYBINDINGS & MOUSE / YANK BEHAVIOR
# =======================================================================

# --- Determine system clipboard command (Wayland vs X11) ---
if-shell "command -v wl-copy >/dev/null 2>&1" \
    'set -g @copy_cmd "wl-copy --no-newline"' \
    'set -g @copy_cmd "xclip -selection clipboard -i"'

if-shell "command -v wl-paste >/dev/null 2>&1" \
    'set -g @paste_cmd "wl-paste --no-newline"' \
    'set -g @paste_cmd "xclip -o -selection clipboard"'


# --- Conditional mouse drag: works correctly in Neovim ---
unbind-key -n MouseDrag1Pane
bind-key -n MouseDrag1Pane if-shell \
    "tmux display-message -p '#{pane_current_command}' | grep -iqE '^(n?vim|vi)$'" \
    "send-keys -M" \
    "copy-mode -M"

# Copy on mouse release (non-vim panes)
unbind-key -T copy-mode MouseDragEnd1Pane
unbind-key -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode MouseDragEnd1Pane send -X copy-pipe-and-cancel "sh -c \"$(@copy_cmd)\""
bind-key -T copy-mode-vi MouseDragEnd1Pane send -X copy-pipe-and-cancel "sh -c \"$(@copy_cmd)\""

# --- Keyboard yank ---
unbind-key -T copy-mode y
unbind-key -T copy-mode-vi y
bind-key -T copy-mode y send -X copy-pipe-and-cancel "sh -c \"$(@copy_cmd)\""
bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel "sh -c \"$(@copy_cmd)\""

# --- Keyboard enter copy mode with prefix + Space ---
bind-key -T prefix Space if-shell "tmux display-message -p '#{pane_current_command}' | grep -iqE '(n?vim|vi)'" \
    "send-keys Space" \
    "copy-mode -e"
bind-key -T copy-mode Space if -F "#{selection_present}" { send -X clear-selection } { send -X begin-selection }
bind-key -T copy-mode Enter send -X copy-pipe-and-cancel "sh -c \"$(@copy_cmd)\""

# --- Right-click paste ---
unbind-key -n MouseDown3Pane
bind-key -T root MouseUp3Pane run "eval \$(@paste_cmd) | tmux load-buffer - && tmux paste-buffer -p"


# =======================================================================
# OPTIONAL: POPUP MENU (Ctrl + Right-click)
# =======================================================================
bind-key -T root C-MouseDown3Pane \
    if-shell -F -t = "#{||:#{mouse_any_flag},#{&&:#{pane_in_mode},#{?#{m/r:(copy|view)-mode,#{pane_mode}},0,1}}}" \
    { select-pane -t = ; send-keys -M } \
    { display-menu -T "#[align=centre]#{pane_index} (#{pane_id})" -t = -x M -y M \
        "Horizontal Split" h { split-window -h } \
        "Vertical Split" v { split-window -v } \
        "Swap Up" u { swap-pane -U } \
        "Swap Down" d { swap-pane -D } \
        "Swap Marked" s { swap-pane } \
        "Kill Pane" X { kill-pane } \
        "Respawn Pane" R { respawn-pane -k } \
        "#{?pane_marked,Unmark,Mark}" m { select-pane -m } \
        "#{?window_zoomed_flag,Unzoom,Zoom}" z { resize-pane -Z } \
    }


# =======================================================================
# NEOVIM INTEGRATION NOTES
# =======================================================================
# In Neovim, add:
#     set clipboard=unnamedplus
#
# This ensures yanks go straight to your system clipboard (no tmux needed),
# and avoids copying line numbers when theyâ€™re shown.
#
# Mouse scroll and selection in Neovim now bypass tmux copy-mode.
#
# For Bash or other shells, tmux copy-mode + xclip/wl-copy works normally.

# =======================================================================
# END OF FILE
# =======================================================================

